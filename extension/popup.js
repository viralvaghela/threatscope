
  
document.getElementById("analyzeButton").addEventListener("click", () => {
  chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {
    chrome.tabs.sendMessage(tabs[0].id, { action: "analyzePage" }, (response) => {
      // Show the loading spinner
      const loadingSpinner = document.getElementById("loadingSpinner");
      loadingSpinner.style.display = "block";

      // Send the data to the API
      fetch(`http://127.0.0.1:5000/generate?prompt=${encodeURIComponent(JSON.stringify(response))}`)
        .then(response => response.json())
        .then(data => {
          console.log('API Response:', data);
          const resultsDiv = document.getElementById("results");
          resultsDiv.innerHTML = "";

          if (data && data.generated_text) {
            let analysisText = data.generated_text;

            // Remove all triple backticks and optional language markers like "html"
            analysisText = analysisText.replace(/```(?:\w+)?/g, '').trim();

            // Inject raw HTML into results div
            resultsDiv.innerHTML = analysisText;
          } else {
            resultsDiv.innerHTML = "<p>No valid data found.</p>";
          }

          loadingSpinner.style.display = "none";
        })
        .catch(error => {
          console.error("Error sending data to the API:", error);
          const resultsDiv = document.getElementById("results");
          resultsDiv.innerHTML = "<p>Error fetching data from the API. Please try again later.</p>";
          loadingSpinner.style.display = "none";
        });
    });
  });
});
// Print/Save as PDF button logic
document.getElementById("printButton").addEventListener("click", () => {
  const printWindow = window.open('', '_blank', 'width=900,height=700');
  const content = document.getElementById("results").innerHTML;

  printWindow.document.write(`
    <html>
      <head>
        <title>ThreatScope Security Report</title>
        <style>
          body {
            font-family: 'Segoe UI', sans-serif;
            padding: 40px;
            color: #1a1a1a;
            background-color: #f9f9f9;
          }

          h1 {
            text-align: center;
            font-size: 28px;
            margin-bottom: 10px;
            color: #2c3e50;
          }

          h2, h3, h4, h5 {
            color: #2c3e50;
            margin-top: 24px;
          }

          p, pre {
            font-size: 15px;
            line-height: 1.6;
            margin-bottom: 10px;
          }

          code {
            background-color: #f0f0f0;
            padding: 2px 6px;
            border-radius: 4px;
            font-size: 14px;
            font-family: monospace;
          }

          pre {
            background-color: #272822;
            color: #f8f8f2;
            padding: 12px;
            border-radius: 6px;
            overflow-x: auto;
            white-space: pre-wrap;
            word-wrap: break-word;
          }

          .secure {
            background-color: #e0f7e9;
            padding: 10px;
            border-left: 5px solid #2ecc71;
            margin-bottom: 10px;
            border-radius: 5px;
          }

          .insecure {
            background-color: #fdecea;
            padding: 10px;
            border-left: 5px solid #e74c3c;
            margin-bottom: 10px;
            border-radius: 5px;
          }

          .note {
            background-color: #fff9e6;
            border-left: 5px solid #f39c12;
            padding: 10px;
            margin-bottom: 10px;
            border-radius: 5px;
          }

          .footer {
            text-align: center;
            font-size: 12px;
            color: #888;
            margin-top: 40px;
          }

          hr {
            margin: 30px 0;
            border: none;
            border-top: 1px solid #ccc;
          }
        </style>
      </head>
      <body>
        <h1>üîç ThreatScope Security Analysis Report</h1>
        <p><strong>Date:</strong> ${new Date().toLocaleString()}</p>
        <hr />
        ${content}
        <hr />
        <div class="footer">
          Report generated by ThreatScope Security Extension
        </div>
      </body>
    </html>
  `);

  printWindow.document.close();
  printWindow.focus();

  setTimeout(() => {
    printWindow.print();
    printWindow.close();
  }, 500);
});


document.getElementById("captureButton").addEventListener("click", () => {
  const loadingSpinner = document.getElementById("loadingSpinner");
  const resultsDiv = document.getElementById("results");

  // Clear previous content and show loading
  resultsDiv.innerHTML = "";
  loadingSpinner.style.display = "block";

  chrome.tabs.captureVisibleTab(null, { format: "png" }, (dataUrl) => {
    fetch("http://127.0.0.1:5000/upload_screenshot", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ screenshot: dataUrl })
    })
    .then(res => res.json())
.then(data => {
  console.log("Received API response:", data);  // üîç log response

  let analysisText = data.generated_text;

  // Clean markdown-style backticks if present
  if (analysisText) {
    analysisText = analysisText.replace(/```(?:html)?/g, '').trim();

    // Inject raw HTML into results div
    resultsDiv.innerHTML = analysisText;
  } else {
    resultsDiv.innerHTML = "<p>No analysis result received.</p>";
  }

  loadingSpinner.style.display = "none";
})
.catch(err => {
  console.error("Screenshot upload error:", err);
  resultsDiv.innerHTML = `<p style="color:red;"><b>Error:</b> ${err.message}</p>`;
  loadingSpinner.style.display = "none";
});
  });
});
